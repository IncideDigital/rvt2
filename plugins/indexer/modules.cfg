;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;RVTPSTParser configuration

[indexer.pstparser.ExportPst]
outdir: ${plugins.common:mailsdir}/
; pffexport: /usr/local/bin/pffexport

[indexer.export_pst.ExportPstEml]
outdir: ${plugins.common:mailsdir}/export

[indexer.pstparser.MailParser]
; mailsdir: ${indexer.pstparser.ExportPst:outdir}

[indexer.pstparser.MailboxCSV]


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;BlindSearches configuration

[indexer.blindsearches.BlindSearches]
module: indexer.blindsearches.BlindSearches
keyword_tag_field: blindsearches-new
strip_match: True

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ElasticSearch configuration

[indexer.elastic.ElasticSearchAdapter]
module: indexer.elastic.ElasticSearchAdapter
name: ${source}
; doc_type: _doc
; operation: update
rvtindex: rvtindexer
; description:

[indexer.elastic.ElasticSearchRegisterSource]
module: indexer.elastic.ElasticSearchRegisterSource
name: ${source}
; doc_type: _doc
rvtindex: rvtindexer
; description:
es_hosts: ${indexer.elastic.ElasticSearchBulkSender:es_hosts}

[indexer.elastic.ElasticSearchBulkSender]
module: indexer.elastic.ElasticSearchBulkSender
es_hosts: http://localhost:9200
name: ${source}
mapping: ${indexer:plugindir}/es-settings.json
; chunk_size: 10
; tag_fields: tags blindsearches
; only_test: False
; offset: 0
; restartable: False
; restartable: False
; max_retries: 5
; retry_on_timeout: True
; progress.disable: False
; progress.cmd: cat "{path}" | wc -l
; cooloff.every: 300
; cooloff.seconds: 5

[indexer.elastic.ElasticSearchQuery]
module: indexer.elastic.ElasticSearchQuery
es_hosts: ${indexer.elastic.ElasticSearchBulkSender:es_hosts}
name: ${indexer.elastic.ElasticSearchBulkSender:name}
; query: *
; source_includes:
; source_excludes:
max_results: 1000
; progress.disable: False
; retry_on_timeout: True

[indexer.elastic.ElasticSearchQueryRelated]
module: indexer.elastic.ElasticSearchQueryRelated
es_hosts: ${indexer.elastic.ElasticSearchBulkSender:es_hosts}
name: ${indexer.elastic.ElasticSearchBulkSender:name}
; query: *
; source_includes:
; source_excludes:
; retry_on_timeout: True

[indexer.elastic.ExportFiles]
module: indexer.elastic.ExportFiles
; outfile: export

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;TikaParser configuration

[indexer.tikaparser.TikaParser]
module: indexer.tikaparser.TikaParser
mapping: ${indexer:plugindir}/tika-mapping.ini
; save_mapping: False
tika_server: http://localhost:9998
; include_unknown: False
; error_status: 400
; file_max_size: 104857600
; content_max_size: 52423800

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Supertimeline events configuration

[ecs]
; Elastic Common Schema
; the default index name in elastic
es_index_name: ${source}-events
; the default value for the output file
outfile: ${outputdir}/indexer/${source}.events.json
; the default directory for all the output files
outdir: ${outputdir}/events

[indexer.events.Timeline]
module: indexer.events.Timeline
include_filename: False
classify: True

[indexer.events.RecentFiles]
module: indexer.events.RecentFiles
classify: True

[indexer.events.BrowsersHistory]
module: indexer.events.BrowsersHistory

[indexer.events.BrowsersCookies]
module: indexer.events.BrowsersCookies

[indexer.events.Prefetch]
module: indexer.events.Prefetch

[indexer.events.UsnJrnl]
module: indexer.events.UsnJrnl
classify: True

[indexer.events.USB]
module: indexer.events.USB

[indexer.events.NetworkUsage]
module: indexer.events.NetworkUsage

[indexer.events.NetworkConnections]
module: indexer.events.NetworkConnections

[indexer.events.Registry]
module: indexer.events.Registry
